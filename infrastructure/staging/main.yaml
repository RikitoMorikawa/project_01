AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - Staging Environment Infrastructure"

Parameters:
  # 共通パラメータ
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: プロジェクト名

  Environment:
    Type: String
    Default: staging
    Description: 環境名

  # ネットワーク設定（ステージング環境用に調整）
  VpcCidr:
    Type: String
    Default: 10.1.0.0/16
    Description: VPC CIDR ブロック（開発環境と分離）

  PublicSubnet1Cidr:
    Type: String
    Default: 10.1.1.0/24
    Description: パブリックサブネット1 CIDR

  PublicSubnet2Cidr:
    Type: String
    Default: 10.1.2.0/24
    Description: パブリックサブネット2 CIDR

  PrivateSubnet1Cidr:
    Type: String
    Default: 10.1.3.0/24
    Description: プライベートサブネット1 CIDR

  PrivateSubnet2Cidr:
    Type: String
    Default: 10.1.4.0/24
    Description: プライベートサブネット2 CIDR

  AvailabilityZone1:
    Type: String
    Default: ap-northeast-1a
    Description: アベイラビリティゾーン1

  AvailabilityZone2:
    Type: String
    Default: ap-northeast-1c
    Description: アベイラビリティゾーン2

  # データベース設定
  DatabaseInstanceClass:
    Type: String
    Default: db.t3.small
    Description: Aurora インスタンスクラス

  DatabaseMultiAZ:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: マルチAZ配置を有効にするかどうか

  DatabaseName:
    Type: String
    Default: csr_lambda_staging
    Description: データベース名

  DatabaseUsername:
    Type: String
    Default: admin
    Description: データベースユーザー名

  # Lambda設定
  LambdaMemorySize:
    Type: Number
    Default: 512
    Description: Lambda メモリサイズ (MB)

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # インターネットゲートウェイ
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-igw"
        - Key: Environment
          Value: !Ref Environment

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # パブリックサブネット
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-subnet-1"
        - Key: Environment
          Value: !Ref Environment

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-subnet-2"
        - Key: Environment
          Value: !Ref Environment

  # プライベートサブネット
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref PrivateSubnet1Cidr
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-subnet-1"
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref PrivateSubnet2Cidr
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-subnet-2"
        - Key: Environment
          Value: !Ref Environment

  # NAT Gateway（高可用性のため2つ作成）
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-eip-1"

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-eip-2"

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-gateway-1"
        - Key: Environment
          Value: !Ref Environment

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-gateway-2"
        - Key: Environment
          Value: !Ref Environment

  # ルートテーブル
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-rt"
        - Key: Environment
          Value: !Ref Environment

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  # プライベートルートテーブル（AZ毎に分離）
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-rt-1"
        - Key: Environment
          Value: !Ref Environment

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-rt-2"
        - Key: Environment
          Value: !Ref Environment

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  # VPC フローログ（ステージング環境での監視強化）
  VPCFlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-vpc-flow-log-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: "*"

  VPCFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vpc/flowlogs/${ProjectName}-${Environment}"
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc-flow-logs"
        - Key: Environment
          Value: !Ref Environment

  VPCFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceType: VPC
      ResourceId: !Ref VPC
      TrafficType: ALL
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VPCFlowLogGroup
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogRole.Arn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc-flow-log"
        - Key: Environment
          Value: !Ref Environment

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectName}-${Environment}-vpc-id"

  PublicSubnet1Id:
    Description: パブリックサブネット1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectName}-${Environment}-public-subnet-1-id"

  PublicSubnet2Id:
    Description: パブリックサブネット2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${ProjectName}-${Environment}-public-subnet-2-id"

  PrivateSubnet1Id:
    Description: プライベートサブネット1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}-${Environment}-private-subnet-1-id"

  PrivateSubnet2Id:
    Description: プライベートサブネット2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectName}-${Environment}-private-subnet-2-id"

  VPCCidr:
    Description: VPC CIDR ブロック
    Value: !Ref VpcCidr
    Export:
      Name: !Sub "${ProjectName}-${Environment}-vpc-cidr"
