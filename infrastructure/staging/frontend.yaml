AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - Staging Environment S3 and CloudFront for Frontend"

Parameters:
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: プロジェクト名

  Environment:
    Type: String
    Default: staging
    Description: 環境名

  CloudFrontEnabled:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: CloudFront を有効にするかどうか

  CustomDomainName:
    Type: String
    Default: ""
    Description: カスタムドメイン名（例：staging.example.com）。空の場合はCloudFrontデフォルトドメインを使用

  SSLCertificateArn:
    Type: String
    Default: ""
    Description: SSL証明書のARN（us-east-1リージョンのACM証明書）。カスタムドメイン使用時に必要

  HostedZoneId:
    Type: String
    Default: ""
    Description: Route 53 ホストゾーン ID。カスタムドメイン使用時に必要

Conditions:
  EnableCloudFront: !Equals [!Ref CloudFrontEnabled, "true"]
  HasCustomDomain: !And
    - !Condition EnableCloudFront
    - !Not [!Equals [!Ref CustomDomainName, ""]]
  HasSSLCertificate: !And
    - !Condition HasCustomDomain
    - !Not [!Equals [!Ref SSLCertificateArn, ""]]
  HasHostedZone: !And
    - !Condition HasCustomDomain
    - !Not [!Equals [!Ref HostedZoneId, ""]]

Resources:
  # S3 バケット（静的ウェブサイトホスティング用）
  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-${Environment}-frontend-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: !If [EnableCloudFront, true, false]
        BlockPublicPolicy: !If [EnableCloudFront, true, false]
        IgnorePublicAcls: !If [EnableCloudFront, true, false]
        RestrictPublicBuckets: !If [EnableCloudFront, true, false]
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
          - Id: AbortIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref S3LogGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-frontend"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # S3 バケットポリシー
  FrontendS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - !If
            - EnableCloudFront
            - Sid: CloudFrontOriginAccessIdentity
              Effect: Allow
              Principal:
                AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
              Action: s3:GetObject
              Resource: !Sub "${FrontendS3Bucket}/*"
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: s3:GetObject
              Resource: !Sub "${FrontendS3Bucket}/*"

  # CloudFront Origin Access Identity
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Condition: EnableCloudFront
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "${ProjectName} ${Environment} OAI"

  # CloudFront ディストリビューション
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Condition: EnableCloudFront
    Properties:
      DistributionConfig:
        Comment: !Sub "${ProjectName} ${Environment} CloudFront Distribution"
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
            Headers:
              - Origin
              - Access-Control-Request-Headers
              - Access-Control-Request-Method
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 0
        CacheBehaviors:
          - PathPattern: "/static/*"
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            DefaultTTL: 31536000 # 1 year for static assets
            MaxTTL: 31536000
            MinTTL: 31536000
          - PathPattern: "/api/*"
            TargetOriginId: ApiOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
              Headers:
                - "*"
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Aliases: !If
          - HasCustomDomain
          - [!Ref CustomDomainName]
          - !Ref "AWS::NoValue"
        ViewerCertificate: !If
          - HasSSLCertificate
          - AcmCertificateArn: !Ref SSLCertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - !If
            - HasCustomDomain
            - CloudFrontDefaultCertificate: true
            - CloudFrontDefaultCertificate: true
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendS3Bucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          - Id: ApiOrigin
            DomainName: !Sub
              - "${ApiId}.execute-api.${AWS::Region}.amazonaws.com"
              - ApiId:
                  Fn::ImportValue: !Sub "${ProjectName}-${Environment}-api-gateway-id"
            OriginPath: "/v1"
            CustomOriginConfig:
              HTTPPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
        Logging:
          Bucket: !GetAtt CloudFrontLogsBucket.DomainName
          IncludeCookies: false
          Prefix: cloudfront-logs/
        WebACLId: !Ref CloudFrontWebACL
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-cloudfront"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # CloudFront ログ用 S3 バケット
  CloudFrontLogsBucket:
    Type: AWS::S3::Bucket
    Condition: EnableCloudFront
    Properties:
      BucketName: !Sub "${ProjectName}-${Environment}-cloudfront-logs-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
          - Id: TransitionToIA
            Status: Enabled
            TransitionInDays: 30
            StorageClass: STANDARD_IA
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-cloudfront-logs"
        - Key: Environment
          Value: !Ref Environment

  # WAF Web ACL（基本的なセキュリティルール）
  CloudFrontWebACL:
    Type: AWS::WAFv2::WebACL
    Condition: EnableCloudFront
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-cloudfront-waf"
      Description: !Sub "WAF for ${ProjectName} ${Environment} CloudFront"
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          Priority: 2
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: KnownBadInputsRuleSetMetric
        - Name: RateLimitRule
          Priority: 3
          Action:
            Block: {}
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitRuleMetric
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub "${ProjectName}${Environment}WebACL"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-cloudfront-waf"
        - Key: Environment
          Value: !Ref Environment

  # S3 ログ グループ
  S3LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/s3/${ProjectName}-${Environment}-frontend"
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-s3-logs"
        - Key: Environment
          Value: !Ref Environment

  # Route 53 DNS レコード（カスタムドメイン用）
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: HasHostedZone
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref CustomDomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront のホストゾーン ID（固定値）
        EvaluateTargetHealth: false

  # デプロイメント用 IAM ロール
  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-deployment-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3DeploymentAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:GetBucketVersioning
                  - s3:PutBucketVersioning
                Resource:
                  - !Sub "${FrontendS3Bucket}/*"
                  - !GetAtt FrontendS3Bucket.Arn
        - PolicyName: CloudFrontInvalidation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                  - cloudfront:GetInvalidation
                  - cloudfront:ListInvalidations
                  - cloudfront:GetDistribution
                Resource: !If
                  - EnableCloudFront
                  - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
                  - !Ref "AWS::NoValue"
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-deployment-role"
        - Key: Environment
          Value: !Ref Environment

  # CloudFront アラーム
  CloudFrontErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableCloudFront
    Properties:
      AlarmName: !Sub "${ProjectName}-${Environment}-cloudfront-error-rate"
      AlarmDescription: CloudFront error rate is too high
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      AlarmActions:
        - !Ref FrontendAlarmTopic

  # SNS トピック（アラーム通知用）
  FrontendAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ProjectName}-${Environment}-frontend-alarms"
      DisplayName: !Sub "${ProjectName} ${Environment} Frontend Alarms"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-frontend-alarms"
        - Key: Environment
          Value: !Ref Environment

Outputs:
  FrontendS3BucketName:
    Description: フロントエンド S3 バケット名
    Value: !Ref FrontendS3Bucket
    Export:
      Name: !Sub "${ProjectName}-${Environment}-frontend-bucket-name"

  FrontendS3BucketWebsiteURL:
    Description: S3 バケット ウェブサイト URL
    Value: !GetAtt FrontendS3Bucket.WebsiteURL
    Export:
      Name: !Sub "${ProjectName}-${Environment}-frontend-s3-url"

  CloudFrontDistributionId:
    Condition: EnableCloudFront
    Description: CloudFront ディストリビューション ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${ProjectName}-${Environment}-cloudfront-distribution-id"

  CloudFrontDistributionDomainName:
    Condition: EnableCloudFront
    Description: CloudFront ディストリビューション ドメイン名
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${ProjectName}-${Environment}-cloudfront-domain-name"

  CloudFrontDistributionURL:
    Condition: EnableCloudFront
    Description: CloudFront ディストリビューション URL
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-cloudfront-url"

  FrontendURL:
    Description: フロントエンド URL
    Value: !If
      - EnableCloudFront
      - !Sub "https://${CloudFrontDistribution.DomainName}"
      - !GetAtt FrontendS3Bucket.WebsiteURL
    Export:
      Name: !Sub "${ProjectName}-${Environment}-frontend-url"

  DeploymentRoleArn:
    Description: デプロイメント用 IAM ロール ARN
    Value: !GetAtt DeploymentRole.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-deployment-role-arn"

  WebACLArn:
    Condition: EnableCloudFront
    Description: WAF Web ACL ARN
    Value: !GetAtt CloudFrontWebACL.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-waf-web-acl-arn"

  FrontendAlarmTopicArn:
    Description: フロントエンドアラーム SNS トピック ARN
    Value: !Ref FrontendAlarmTopic
    Export:
      Name: !Sub "${ProjectName}-${Environment}-frontend-alarm-topic-arn"

  CustomDomainName:
    Condition: HasCustomDomain
    Description: カスタムドメイン名
    Value: !Ref CustomDomainName
    Export:
      Name: !Sub "${ProjectName}-${Environment}-custom-domain-name"

  SSLCertificateArn:
    Condition: HasSSLCertificate
    Description: SSL証明書ARN
    Value: !Ref SSLCertificateArn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-ssl-certificate-arn"
