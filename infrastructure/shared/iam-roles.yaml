AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - IAM Roles and Policies"

Parameters:
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: Project name for resource naming

  Environment:
    Type: String
    AllowedValues: [dev, staging, prod]
    Description: Environment name

Resources:
  # CloudFormation デプロイ用ロール
  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-cloudformation-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      Policies:
        - PolicyName: IAMPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                Resource: "*"

  # CodePipeline サービスロール
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketVersioning
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt CloudFormationDeployRole.Arn

  # CodeBuild サービスロール
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-codebuild-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildServicePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: "*"

  # GitHub Actions 用ユーザー（プログラマティックアクセス用）
  GitHubActionsUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "${ProjectName}-${Environment}-github-actions"
      Policies:
        - PolicyName: GitHubActionsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !GetAtt CloudFormationDeployRole.Arn
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:PublishVersion
                  - lambda:UpdateAlias
                Resource: "*"

  # GitHub Actions 用アクセスキー
  GitHubActionsAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref GitHubActionsUser

Outputs:
  CloudFormationDeployRoleArn:
    Description: CloudFormation Deploy Role ARN
    Value: !GetAtt CloudFormationDeployRole.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-cloudformation-role-arn"

  CodePipelineServiceRoleArn:
    Description: CodePipeline Service Role ARN
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-codepipeline-role-arn"

  CodeBuildServiceRoleArn:
    Description: CodeBuild Service Role ARN
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-codebuild-role-arn"

  GitHubActionsUserArn:
    Description: GitHub Actions User ARN
    Value: !GetAtt GitHubActionsUser.Arn

  GitHubActionsAccessKeyId:
    Description: GitHub Actions Access Key ID
    Value: !Ref GitHubActionsAccessKey

  GitHubActionsSecretAccessKey:
    Description: GitHub Actions Secret Access Key
    Value: !GetAtt GitHubActionsAccessKey.SecretAccessKey
