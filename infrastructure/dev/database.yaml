AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - Development Environment Aurora MySQL Database"

Parameters:
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: プロジェクト名

  Environment:
    Type: String
    Default: dev
    Description: 環境名

  DatabaseInstanceClass:
    Type: String
    Default: db.t3.small
    Description: Aurora インスタンスクラス

  DatabaseName:
    Type: String
    Default: csr_lambda_dev
    Description: データベース名

  DatabaseUsername:
    Type: String
    Default: admin
    Description: データベースユーザー名
    NoEcho: true

  DatabasePassword:
    Type: String
    Description: データベースパスワード
    NoEcho: true
    MinLength: 8
    MaxLength: 128
    AllowedPattern: "^[a-zA-Z0-9!@#$%^&*()_+=-]*$"
    ConstraintDescription: パスワードは8-128文字で、英数字と特殊文字(!@#$%^&*()_+=-)を含む必要があります

Resources:
  # データベースサブネットグループ
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "${ProjectName}-${Environment}-db-subnet-group"
      DBSubnetGroupDescription: !Sub "${ProjectName} ${Environment} database subnet group"
      SubnetIds:
        - Fn::ImportValue: !Sub "${ProjectName}-${Environment}-private-subnet-1-id"
        - Fn::ImportValue: !Sub "${ProjectName}-${Environment}-private-subnet-2-id"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-db-subnet-group"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # データベースセキュリティグループ
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ProjectName}-${Environment}-db-sg"
      GroupDescription: Security group for Aurora MySQL database
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-${Environment}-vpc-id"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
          Description: Lambda からのアクセスを許可
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-db-sg"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Lambda セキュリティグループ（データベースアクセス用）
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ProjectName}-${Environment}-lambda-sg"
      GroupDescription: Security group for Lambda functions
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-${Environment}-vpc-id"
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: すべてのアウトバウンドトラフィックを許可
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-lambda-sg"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Aurora クラスターパラメータグループ
  AuroraClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      DBClusterParameterGroupName: !Sub "${ProjectName}-${Environment}-aurora-cluster-params"
      Description: !Sub "${ProjectName} ${Environment} Aurora cluster parameter group"
      Family: aurora-mysql8.0
      Parameters:
        character_set_server: utf8mb4
        collation_server: utf8mb4_unicode_ci
        innodb_buffer_pool_size: "{DBInstanceClassMemory*3/4}"
        max_connections: 1000
        slow_query_log: 1
        long_query_time: 2
        log_queries_not_using_indexes: 1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-aurora-cluster-params"
        - Key: Environment
          Value: !Ref Environment

  # Aurora インスタンスパラメータグループ
  AuroraInstanceParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub "${ProjectName}-${Environment}-aurora-instance-params"
      Description: !Sub "${ProjectName} ${Environment} Aurora instance parameter group"
      Family: aurora-mysql8.0
      Parameters:
        innodb_print_all_deadlocks: 1
        general_log: 0
        binlog_format: ROW
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-aurora-instance-params"
        - Key: Environment
          Value: !Ref Environment

  # Aurora クラスター
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    Properties:
      DBClusterIdentifier: !Sub "${ProjectName}-${Environment}-aurora-cluster"
      Engine: aurora-mysql
      EngineVersion: "8.0.mysql_aurora.3.02.0"
      DatabaseName: !Ref DatabaseName
      MasterUsername: !Ref DatabaseUsername
      MasterUserPassword: !Ref DatabasePassword
      BackupRetentionPeriod: 7
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "sun:04:00-sun:05:00"
      DBClusterParameterGroupName: !Ref AuroraClusterParameterGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      StorageEncrypted: true
      KmsKeyId: alias/aws/rds
      EnableCloudwatchLogsExports:
        - error
        - general
        - slowquery
      DeletionProtection: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-aurora-cluster"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Aurora インスタンス（ライター）
  AuroraInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub "${ProjectName}-${Environment}-aurora-instance-1"
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: aurora-mysql
      DBParameterGroupName: !Ref AuroraInstanceParameterGroup
      PubliclyAccessible: false
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      PerformanceInsightsEnabled: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-aurora-instance-1"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # RDS Enhanced Monitoring Role
  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-rds-monitoring-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
      Path: /
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-rds-monitoring-role"
        - Key: Environment
          Value: !Ref Environment

Outputs:
  DatabaseClusterEndpoint:
    Description: Aurora クラスターエンドポイント
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-cluster-endpoint"

  DatabaseClusterReadEndpoint:
    Description: Aurora クラスター読み取りエンドポイント
    Value: !GetAtt AuroraCluster.ReadEndpoint.Address
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-cluster-read-endpoint"

  DatabasePort:
    Description: データベースポート
    Value: !GetAtt AuroraCluster.Endpoint.Port
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-port"

  DatabaseName:
    Description: データベース名
    Value: !Ref DatabaseName
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-name"

  LambdaSecurityGroupId:
    Description: Lambda セキュリティグループ ID
    Value: !Ref LambdaSecurityGroup
    Export:
      Name: !Sub "${ProjectName}-${Environment}-lambda-sg-id"

  DatabaseSecurityGroupId:
    Description: データベースセキュリティグループ ID
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-sg-id"
