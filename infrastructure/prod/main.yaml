AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - Production Environment Infrastructure"

Parameters:
  # 共通パラメータ
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: プロジェクト名

  Environment:
    Type: String
    Default: prod
    Description: 環境名

  # ネットワーク設定（本番環境用に完全分離）
  VpcCidr:
    Type: String
    Default: 10.2.0.0/16
    Description: VPC CIDR ブロック（本番環境専用）

  PublicSubnet1Cidr:
    Type: String
    Default: 10.2.1.0/24
    Description: パブリックサブネット1 CIDR

  PublicSubnet2Cidr:
    Type: String
    Default: 10.2.2.0/24
    Description: パブリックサブネット2 CIDR

  PrivateSubnet1Cidr:
    Type: String
    Default: 10.2.3.0/24
    Description: プライベートサブネット1 CIDR

  PrivateSubnet2Cidr:
    Type: String
    Default: 10.2.4.0/24
    Description: プライベートサブネット2 CIDR

  AvailabilityZone1:
    Type: String
    Default: ap-northeast-1a
    Description: アベイラビリティゾーン1

  AvailabilityZone2:
    Type: String
    Default: ap-northeast-1c
    Description: アベイラビリティゾーン2

  # データベース設定
  DatabaseInstanceClass:
    Type: String
    Default: db.t3.medium
    Description: Aurora インスタンスクラス

  DatabaseMultiAZ:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: マルチAZ配置を有効にするかどうか

  DatabaseReadReplica:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: 読み取り専用レプリカを作成するかどうか

  DatabaseName:
    Type: String
    Default: csr_lambda_prod
    Description: データベース名

  DatabaseUsername:
    Type: String
    Default: admin
    Description: データベースユーザー名

  # Lambda設定
  LambdaMemorySize:
    Type: Number
    Default: 1024
    Description: Lambda メモリサイズ (MB)

  LambdaProvisionedConcurrency:
    Type: Number
    Default: 10
    Description: Lambda Provisioned Concurrency

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: CostCenter
          Value: Production

  # インターネットゲートウェイ
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-igw"
        - Key: Environment
          Value: !Ref Environment

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # パブリックサブネット
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-subnet-1"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-subnet-2"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public

  # プライベートサブネット
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref PrivateSubnet1Cidr
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-subnet-1"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref PrivateSubnet2Cidr
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-subnet-2"
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private

  # NAT Gateway（高可用性のため2つ作成）
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-eip-1"

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-eip-2"

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-gateway-1"
        - Key: Environment
          Value: !Ref Environment

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-nat-gateway-2"
        - Key: Environment
          Value: !Ref Environment

  # ルートテーブル
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-public-rt"
        - Key: Environment
          Value: !Ref Environment

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  # プライベートルートテーブル（AZ毎に分離）
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-rt-1"
        - Key: Environment
          Value: !Ref Environment

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-rt-2"
        - Key: Environment
          Value: !Ref Environment

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  # VPC エンドポイント（本番環境でのセキュリティ強化）
  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource: "*"

  SecretsManagerVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.secretsmanager"
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroup
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: "*"

  # VPC エンドポイント用セキュリティグループ
  VPCEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ProjectName}-${Environment}-vpc-endpoint-sg"
      GroupDescription: Security group for VPC endpoints
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VpcCidr
          Description: HTTPS アクセスを VPC 内から許可
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc-endpoint-sg"
        - Key: Environment
          Value: !Ref Environment

  # VPC フローログ（本番環境での詳細監視）
  VPCFlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-vpc-flow-log-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: "*"

  VPCFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vpc/flowlogs/${ProjectName}-${Environment}"
      RetentionInDays: 90
      KmsKeyId: !Ref CloudWatchLogsKMSKey
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc-flow-logs"
        - Key: Environment
          Value: !Ref Environment

  VPCFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceType: VPC
      ResourceId: !Ref VPC
      TrafficType: ALL
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VPCFlowLogGroup
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogRole.Arn
      LogFormat: "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${windowstart} ${windowend} ${action} ${flowlogstatus}"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-vpc-flow-log"
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Logs 用 KMS キー
  CloudWatchLogsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "KMS key for ${ProjectName} ${Environment} CloudWatch Logs encryption"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow CloudWatch Logs
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-cloudwatch-logs-key"
        - Key: Environment
          Value: !Ref Environment

  CloudWatchLogsKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${ProjectName}-${Environment}-cloudwatch-logs"
      TargetKeyId: !Ref CloudWatchLogsKMSKey

  # ネットワーク ACL（追加のセキュリティレイヤー）
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-private-nacl"
        - Key: Environment
          Value: !Ref Environment

  # プライベートサブネット用 Network ACL ルール
  PrivateNetworkAclEntryInboundVPC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: !Ref VpcCidr

  PrivateNetworkAclEntryOutboundAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  PrivateSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      NetworkAclId: !Ref PrivateNetworkAcl

  PrivateSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      NetworkAclId: !Ref PrivateNetworkAcl

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectName}-${Environment}-vpc-id"

  PublicSubnet1Id:
    Description: パブリックサブネット1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectName}-${Environment}-public-subnet-1-id"

  PublicSubnet2Id:
    Description: パブリックサブネット2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${ProjectName}-${Environment}-public-subnet-2-id"

  PrivateSubnet1Id:
    Description: プライベートサブネット1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}-${Environment}-private-subnet-1-id"

  PrivateSubnet2Id:
    Description: プライベートサブネット2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectName}-${Environment}-private-subnet-2-id"

  VPCCidr:
    Description: VPC CIDR ブロック
    Value: !Ref VpcCidr
    Export:
      Name: !Sub "${ProjectName}-${Environment}-vpc-cidr"

  CloudWatchLogsKMSKeyId:
    Description: CloudWatch Logs 用 KMS キー ID
    Value: !Ref CloudWatchLogsKMSKey
    Export:
      Name: !Sub "${ProjectName}-${Environment}-cloudwatch-logs-kms-key-id"

  VPCEndpointSecurityGroupId:
    Description: VPC エンドポイント用セキュリティグループ ID
    Value: !Ref VPCEndpointSecurityGroup
    Export:
      Name: !Sub "${ProjectName}-${Environment}-vpc-endpoint-sg-id"
