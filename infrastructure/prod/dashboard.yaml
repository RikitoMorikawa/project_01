AWSTemplateFormatVersion: "2010-09-09"
Description: "CSR Lambda API System - Production Environment CloudWatch Dashboard"

Parameters:
  ProjectName:
    Type: String
    Default: csr-lambda-api
    Description: „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂêç

  Environment:
    Type: String
    Default: prod
    Description: Áí∞Â¢ÉÂêç

Resources:
  # Êú¨Áï™Áí∞Â¢É„Ç∑„Çπ„ÉÜ„É†Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ
  SystemDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${ProjectName}-${Environment}-system-overview"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# ${ProjectName} ${Environment} Êú¨Áï™„Ç∑„Çπ„ÉÜ„É†Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ\n\n**Áí∞Â¢É**: ${Environment} | **„É™„Éº„Ç∏„Éß„É≥**: ${AWS::Region} | **ÈáçË¶ÅÂ∫¶**: CRITICAL | **24/7Áõ£Ë¶ñÂØæË±°**"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Errors", "FunctionName", "${ProjectName}-${Environment}-api" ],
                  [ ".", "Throttles", ".", "." ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "üö® „ÇØ„É™„ÉÜ„Ç£„Ç´„É´„Ç®„É©„Éº",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 6,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApiGateway", "5XXError", "ApiName", "${ProjectName}-${Environment}-api", "Stage", "v1" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "üö® API 5xx „Ç®„É©„Éº",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBClusterIdentifier", "${ProjectName}-${Environment}-aurora-cluster" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "üìä DB CPU‰ΩøÁî®Áéá",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 18,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${ProjectName}-${Environment}-api" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "‚è±Ô∏è Âπ≥Âùá„É¨„Çπ„Éù„É≥„ÇπÊôÇÈñì",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${ProjectName}-${Environment}-api", { "stat": "Average" } ],
                  [ ".", ".", ".", ".", { "stat": "p95" } ],
                  [ ".", ".", ".", ".", { "stat": "p99" } ],
                  [ ".", "Invocations", ".", ".", { "stat": "Sum" } ],
                  [ ".", "Errors", ".", ".", { "stat": "Sum" } ],
                  [ ".", "Throttles", ".", ".", { "stat": "Sum" } ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Èñ¢Êï∞„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÔºàÊú¨Áï™Ôºâ",
                "period": 300,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "ConcurrentExecutions", "FunctionName", "${ProjectName}-${Environment}-api" ],
                  [ ".", "ProvisionedConcurrencyUtilization", ".", "." ],
                  [ ".", "ProvisionedConcurrencyInvocations", ".", "." ],
                  [ ".", "ProvisionedConcurrencySpilloverInvocations", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda ÂêåÊôÇÂÆüË°å„ÉªProvisioned Concurrency",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApiGateway", "Count", "ApiName", "${ProjectName}-${Environment}-api", "Stage", "v1" ],
                  [ ".", "4XXError", ".", ".", ".", "." ],
                  [ ".", "5XXError", ".", ".", ".", "." ],
                  [ ".", "Latency", ".", ".", ".", ".", { "stat": "Average" } ],
                  [ ".", "IntegrationLatency", ".", ".", ".", ".", { "stat": "Average" } ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "API Gateway „É°„Éà„É™„ÇØ„ÇπÔºàÊú¨Áï™Ôºâ",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBClusterIdentifier", "${ProjectName}-${Environment}-aurora-cluster" ],
                  [ ".", "DatabaseConnections", ".", "." ],
                  [ ".", "ReadLatency", ".", ".", { "stat": "Average" } ],
                  [ ".", "WriteLatency", ".", ".", { "stat": "Average" } ],
                  [ ".", "FreeableMemory", ".", "." ],
                  [ ".", "ReadThroughput", ".", "." ],
                  [ ".", "WriteThroughput", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Aurora „Éá„Éº„Çø„Éô„Éº„ÇπÔºàÊú¨Áï™Ôºâ",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 20,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/CloudFront", "Requests", "DistributionId", "${AWS::StackName}-cloudfront-distribution" ],
                  [ ".", "BytesDownloaded", ".", "." ],
                  [ ".", "ErrorRate", ".", "." ],
                  [ ".", "OriginLatency", ".", "." ],
                  [ ".", "CacheHitRate", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "us-east-1",
                "title": "CloudFront CDNÔºàÊú¨Áï™Ôºâ",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 20,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "user_logins" ],
                  [ ".", "user_registrations" ],
                  [ ".", "api_calls_total", "endpoint", "auth_login" ],
                  [ ".", ".", ".", "users_list" ],
                  [ ".", "authentication_failures", "reason", "invalid_credentials" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "„Éì„Ç∏„Éç„Çπ„É°„Éà„É™„ÇØ„ÇπÔºàÊú¨Áï™Ôºâ",
                "period": 300,
                "stat": "Sum"
              }
            }
          ]
        }

  # Êú¨Áï™Áí∞Â¢É„Éì„Ç∏„Éç„Çπ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ
  BusinessDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${ProjectName}-${Environment}-business-metrics"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# ${ProjectName} ${Environment} „Éì„Ç∏„Éç„Çπ„É°„Éà„É™„ÇØ„Çπ\n\n**„É¶„Éº„Ç∂„ÉºË°åÂãïÂàÜÊûê„Éª„Éì„Ç∏„Éç„Çπ KPI Áõ£Ë¶ñ**"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "user_logins", { "stat": "Sum" } ],
                  [ ".", "user_registrations", { "stat": "Sum" } ],
                  [ ".", "user_logouts", { "stat": "Sum" } ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "üìà „É¶„Éº„Ç∂„Éº„Ç¢„ÇØ„ÉÜ„Ç£„Éì„ÉÜ„Ç£",
                "period": 3600,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "api_calls_total", "endpoint", "auth_login" ],
                  [ ".", ".", ".", "users_list" ],
                  [ ".", ".", ".", "users_get" ],
                  [ ".", ".", ".", "users_create" ],
                  [ ".", ".", ".", "users_update" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "üîó API „Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà‰ΩøÁî®Áä∂Ê≥Å",
                "period": 3600,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "authentication_failures", "reason", "invalid_credentials" ],
                  [ ".", ".", ".", "user_not_found" ],
                  [ ".", ".", ".", "user_not_confirmed" ],
                  [ ".", "validation_errors", "field", "email" ],
                  [ ".", ".", ".", "password" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "‚ö†Ô∏è „Ç®„É©„ÉºÂàÜÊûê",
                "period": 3600,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "api_response_time", "endpoint", "auth_login", { "stat": "Average" } ],
                  [ ".", ".", ".", "users_list", { "stat": "Average" } ],
                  [ ".", ".", ".", "users_get", { "stat": "Average" } ],
                  [ ".", ".", ".", "auth_login", { "stat": "p95" } ],
                  [ ".", ".", ".", "users_list", { "stat": "p95" } ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "‚è±Ô∏è API „É¨„Çπ„Éù„É≥„ÇπÊôÇÈñìÂàÜÊûê",
                "period": 900,
                "yAxis": {
                  "left": {
                    "label": "„Éü„É™Áßí"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "db_operations_total", "operation", "user_create" ],
                  [ ".", ".", ".", "user_update" ],
                  [ ".", ".", ".", "user_query" ],
                  [ ".", "db_operations_success", "operation", "user_create" ],
                  [ ".", ".", ".", "user_update" ],
                  [ ".", ".", ".", "user_query" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "üíæ „Éá„Éº„Çø„Éô„Éº„ÇπÊìç‰Ωú",
                "period": 900,
                "stat": "Sum"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 14,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/${ProjectName}-${Environment}-custom-metrics'\n| fields @timestamp, metric_name, value, dimensions\n| filter metric_name in ['user_logins', 'user_registrations', 'authentication_failures']\n| stats sum(value) by metric_name, bin(5m)\n| sort @timestamp desc",
                "region": "${AWS::Region}",
                "title": "üìä „Éì„Ç∏„Éç„Çπ„É°„Éà„É™„ÇØ„ÇπÈõÜË®àÔºà5ÂàÜÈñìÈöîÔºâ",
                "view": "table"
              }
            }
          ]
        }

  # Êú¨Áï™Áí∞Â¢É„Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ
  SecurityDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${ProjectName}-${Environment}-security-monitoring"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# ${ProjectName} ${Environment} „Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Ë¶ñ\n\n**Ë™çË®º„ÉªË™çÂèØ„Éª„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç§„Éô„É≥„ÉàÁõ£Ë¶ñ**"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CSR-Lambda-API", "authentication_failures", "reason", "invalid_credentials" ],
                  [ ".", ".", ".", "user_not_found" ],
                  [ ".", ".", ".", "user_not_confirmed" ],
                  [ ".", ".", ".", "too_many_requests" ]
                ],
                "view": "timeSeries",
                "stacked": true,
                "region": "${AWS::Region}",
                "title": "üîí Ë™çË®ºÂ§±Êïó„Éë„Çø„Éº„É≥ÂàÜÊûê",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApiGateway", "4XXError", "ApiName", "${ProjectName}-${Environment}-api", "Stage", "v1" ],
                  [ ".", "Count", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "üö´ API „Ç¢„ÇØ„Çª„ÇπÊãíÂê¶„Éª„Ç®„É©„Éº",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 8,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/${ProjectName}-${Environment}-api'\n| fields @timestamp, @message, @requestId\n| filter @message like /authentication_failures/ or @message like /UNAUTHORIZED/ or @message like /FORBIDDEN/\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "üîç „Çª„Ç≠„É•„É™„ÉÜ„Ç£Èñ¢ÈÄ£„É≠„Ç∞",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 14,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/${ProjectName}-${Environment}-api'\n| fields @timestamp, @message\n| filter @message like /Login attempt/ or @message like /Login failed/ or @message like /Login successful/\n| stats count() by bin(1h)\n| sort @timestamp desc",
                "region": "${AWS::Region}",
                "title": "üìà „É≠„Ç∞„Ç§„É≥Ë©¶Ë°å„Éë„Çø„Éº„É≥ÔºàÊôÇÈñìÂà•Ôºâ",
                "view": "table"
              }
            }
          ]
        }

Outputs:
  SystemDashboardName:
    Description: „Ç∑„Çπ„ÉÜ„É†Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÂêç
    Value: !Ref SystemDashboard
    Export:
      Name: !Sub "${ProjectName}-${Environment}-system-dashboard-name"

  SystemDashboardUrl:
    Description: „Ç∑„Çπ„ÉÜ„É†Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ URL
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-${Environment}-system-overview"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-system-dashboard-url"

  BusinessDashboardName:
    Description: „Éì„Ç∏„Éç„Çπ„É°„Éà„É™„ÇØ„Çπ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÂêç
    Value: !Ref BusinessDashboard
    Export:
      Name: !Sub "${ProjectName}-${Environment}-business-dashboard-name"

  BusinessDashboardUrl:
    Description: „Éì„Ç∏„Éç„Çπ„É°„Éà„É™„ÇØ„Çπ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ URL
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-${Environment}-business-metrics"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-business-dashboard-url"

  SecurityDashboardName:
    Description: „Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÂêç
    Value: !Ref SecurityDashboard
    Export:
      Name: !Sub "${ProjectName}-${Environment}-security-dashboard-name"

  SecurityDashboardUrl:
    Description: „Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Ë¶ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ URL
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-${Environment}-security-monitoring"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-security-dashboard-url"
